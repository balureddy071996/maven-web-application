def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node{

echo "Job Name is: ${env.JOB_NAME}"
echo "Node Name is: ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

def mavenHome = tool name: "maven3.9.0"

try{
//Get the code from Github repo
stage('CheckoutCode')
{
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
}
//Do the build by using Maven
stage('Build')
{
sh "${mavenHome}/bin/mvn clean package"
}
/*
//execute sonarqube report
stage('ExecuteSonarQubeReport')
{
sh "${mavenHome}/bin/mvn sonar:sonar"
}
//uploadArtifactsIntoArtifactoryRepo
stage('UploadArtifactsIntoNexus')
{
sh "${mavenHome}/bin/mvn deploy"
}
//Deploy Application Into Tomcat Server
stage('DeployApplicationIntoTomcatServer')
{
sshagent(['ac72a201-0381-4aa3-9ee7-7d7e543a964d']) 
{
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.39.42:/opt/apache-tomcat-9.0.71/webapps/"
}
}
*/
}//Try Closing
catch(e){
currentBuild.result = "FAILED" 
}
finally{
SendSlackNotification(currentBuild.result)
}
}//Node closing
