def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

pipeline{
    agent any
    tools{
        maven 'maven3.9.0'
    }
stages{
//This stage will get the source code from GitHub
stage('Checkout Code'){
    steps{
    sendSlackNotifications('STARTED')
    git branch: 'development', credentialsId: '267d9e51-57cb-415f-ac7b-1f7b359bc1c8', url: 'https://github.com/balureddy071996/maven-web-application.git'
    }
}
//This stage will do the build
stage('Build'){
    steps{
    sh "mvn clean package"
}    
}
//This stage will execute the sonarqube report
stage('ExecuteSonarQubeReport'){
    steps{
    sh "mvn clean package sonar:sonar"    
    }
}
//this stage will upload artifactory into nexus repo
stage('UploadArtifactIntoNexusRepo'){
    steps{
    sh "mvn clean deploy"
    }
}
//Deploy Application Into Tomcat Server
stage('DeployApplicationIntoTomcatServer'){
    steps{
    sshagent(['ac72a201-0381-4aa3-9ee7-7d7e543a964d']){
        sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.39.42:/opt/apache-tomcat-9.0.71/webapps/" 
    }
}    
}
}//stages closing
post {
  success {
    sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}
    
}//pipeline closing
